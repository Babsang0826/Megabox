<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dev.babsang.megabox.mappers.IMemberMapper">
    <insert id="insertEmailAuth"
            useGeneratedKeys="true"
            keyColumn="index"
            keyProperty="index"
            parameterType="dev.babsang.megabox.entities.member.EmailAuthEntity">
        INSERT INTO `mg_member`.`email_auths` (`email`, `code`, `salt`, `created_on`, `expires_on`, `expired_flag`)
        VALUES (#{email}, #{code}, #{salt}, #{createdOn}, #{expiresOn}, #{isExpired})

    </insert>

    <select id="selectEmailAuthByEmailCodeSalt"
            resultType="dev.babsang.megabox.entities.member.EmailAuthEntity">
        SELECT `index`        As `index`,
               `email`        AS `email`,
               `code`         AS `code`,
               `salt`         AS `salt`,
               `created_on`   AS `createdOn`,
               `expires_on`   AS `expiresOn`,
               `expired_flag` AS `isExpired`
        FROM `mg_member`.email_auths
        WHERE BINARY `email` = #{email}
          AND BINARY `code` = #{code}
          AND BINARY `salt` = #{salt}
        LIMIT 1
    </select>


    <update id="updateEmailAuth"
            parameterType="dev.babsang.megabox.entities.member.EmailAuthEntity">
        UPDATE `mg_member`.`email_auths`
        SET `email`        = #{email},
            `code`         = #{code},
            `salt`         = #{salt},
            `created_on`   = #{createdOn},
            `expires_on`   = #{expiresOn},
            `expired_flag` = #{isExpired}
        WHERE BINARY `index` = #{index}
        LIMIT 1
    </update>

    <select id="selectUserByEmail"
            resultType="dev.babsang.megabox.entities.member.UserEntity">
        SELECT `email`             AS `email`,
               `name`              AS `name`,
               `birthday`          AS `birthday`,
               `contact`           AS `contact`,
               `id`                AS `id`,
               `password`          AS `password`,
               `address_postal`    AS `addressPostal`,
               `address_primary`   AS `addressPrimary`,
               `address_secondary` AS `addressSecondary`,
               `registered_on`     AS `registeredOn`,
               `admin_flag`        AS `adminFlag`
        FROM `mg_member`.`users`
        WHERE BINARY `email` = #{email}
        LIMIT 1
    </select>

    <select id="selectUserById"
            resultType="dev.babsang.megabox.entities.member.UserEntity">
        SELECT `email`             AS `email`,
               `name`              AS `name`,
               `birthday`          AS `birthday`,
               `contact`           AS `contact`,
               `id`                AS `id`,
               `password`          AS `password`,
               `address_postal`    AS `addressPostal`,
               `address_primary`   AS `addressPrimary`,
               `address_secondary` AS `addressSecondary`,
               `registered_on`     AS `registeredOn`,
               `admin_flag`        AS `adminFlag`
        FROM `mg_member`.`users`
        WHERE BINARY `id` = #{id}
        LIMIT 1
    </select>

<!--    <select id="selectKakaoUserById"-->
<!--            resultType="dev.babsang.megabox.entities.member.KakaoUserEntity">-->
<!--        SELECT `id`            AS `id`,-->
<!--               `nickname`      AS `nickname`,-->
<!--               `registered_on` AS `registeredOn`-->
<!--        FROM `mg_member`.`kakao_user`-->
<!--        WHERE `id` = #{id}-->
<!--        LIMIT 1-->
<!--    </select>-->

<!--    <insert id="insertKakaoUser"-->
<!--            parameterType="dev.babsang.megabox.entities.member.KakaoUserEntity">-->
<!--        INSERT INTO `mg_member`.`kakao_user` (`id`, `nickname`, `registered_on`)-->
<!--        VALUES (#{id},-->
<!--                #{nickname},-->
<!--                IFNULL(#{registeredOn}, DEFAULT(`registered_on`)))-->
<!--    </insert>-->


    <insert id="insertUser"
            parameterType="dev.babsang.megabox.entities.member.UserEntity">
        INSERT INTO `mg_member`.`users` (`email`, `name`, `birthday`, `contact`, `id`, `password`, `address_postal`,
                                         `address_primary`, `address_secondary`)
        VALUES (#{email}, #{name}, #{birthday}, #{contact}, #{id}, #{password}, #{addressPostal}, #{addressPrimary},
                #{addressSecondary})
    </insert>

    <select id="selectUserByEmails"
            resultType="dev.babsang.megabox.entities.member.UserEntity">
        SELECT `email`             AS `email`,
               `name`              AS `name`,
               `birthday`          AS `birthday`,
               `contact`           AS `contact`,
               `id`                AS `id`,
               `password`          AS `password`,
               `address_postal`    AS `addressPostal`,
               `address_primary`   AS `addressPrimary`,
               `address_secondary` AS `addressSecondary`,
               `registered_on`     AS `registeredOn`,
               `admin_flag`        AS `adminFlag`
        FROM `mg_member`.users
        WHERE BINARY `id` = #{id}
          AND `password` = #{password}
        LIMIT 1
    </select>

    <select id="selectUserByNameBirthdayContact"
            resultType="dev.babsang.megabox.entities.member.UserEntity">
        SELECT `email`             AS `email`,
               `name`              AS `name`,
               `birthday`          AS `birthday`,
               `contact`           AS `contact`,
               `id`                AS `id`,
               `password`          AS `password`,
               `address_postal`    AS `addressPostal`,
               `address_primary`   AS `addressPrimary`,
               `address_secondary` AS `addressSecondary`,
               `registered_on`     AS `registeredOn`,
               `admin_flag`        AS `adminFlag`
        FROM `mg_member`.users
        WHERE BINARY `name` = #{name}
          AND BINARY `birthday` = #{birthday}
          AND BINARY `contact` = #{contact}
        LIMIT 1
    </select>

    <select id="selectUserByIdNameBirthdayContact"
            resultType="dev.babsang.megabox.entities.member.UserEntity">
        SELECT `email`             AS `email`,
               `name`              AS `name`,
               `birthday`          AS `birthday`,
               `contact`           AS `contact`,
               `id`                AS `id`,
               `password`          AS `password`,
               `address_postal`    AS `addressPostal`,
               `address_primary`   AS `addressPrimary`,
               `address_secondary` AS `addressSecondary`,
               `registered_on`     AS `registeredOn`,
               `admin_flag`        AS `adminFlag`
        FROM `mg_member`.users
        WHERE BINARY `id` = #{id}
          AND BINARY `name` = #{name}
          AND BINARY `birthday` = #{birthday}
          AND BINARY `contact` = #{contact}
          AND BINARY `email` = #{email}
        LIMIT 1
    </select>

    <select id="selectEmailAuthByIndex"
            resultType="dev.babsang.megabox.entities.member.EmailAuthEntity">
        SELECT `index`        As `index`,
               `email`        AS `email`,
               `code`         AS `code`,
               `salt`         AS `salt`,
               `created_on`   AS `createdOn`,
               `expires_on`   AS `expiresOn`,
               `expired_flag` AS `isExpired`
        FROM `mg_member`.email_auths
        WHERE BINARY `index` = #{index}
    </select>

    <update id="updateUser"
            parameterType="dev.babsang.megabox.entities.member.UserEntity">
        UPDATE `mg_member`.`users`
        SET `name`              = #{name},
            `birthday`          = #{birthday},
            `contact`           = #{contact},
            `id`                = #{id},
            `password`          = #{password},
            `address_postal`    = #{addressPostal},
            `address_primary`   = #{addressPrimary},
            `address_secondary` = #{addressSecondary},
            `registered_on`     = #{registeredOn},
            `admin_flag`        = #{adminFlag}
        WHERE BINARY `email` = #{email}
        LIMIT 1
    </update>
<!--연락처 중복-->
    <select id="selectUserByContact"
            resultType="dev.babsang.megabox.entities.member.UserEntity">
        SELECT `email`             AS `email`,
               `name`              AS `name`,
               `birthday`          AS `birthday`,
               `contact`           AS `contact`,
               `id`                AS `id`,
               `password`          AS `password`,
               `address_postal`    AS `addressPostal`,
               `address_primary`   AS `addressPrimary`,
               `address_secondary` AS `addressSecondary`,
               `registered_on`     AS `registeredOn`,
               `admin_flag`        AS `adminFlag`
        FROM `mg_member`.`users`
        WHERE BINARY `contact` = #{contact}
        LIMIT 1
    </select>

</mapper>