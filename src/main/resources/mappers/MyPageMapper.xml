<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dev.babsang.megabox.mappers.IMyPageMapper">
    <insert id="insertScreenInfo"
            useGeneratedKeys="true"
            keyColumn="index"
            keyProperty="index"
            parameterType="dev.babsang.megabox.entities.movie.ScreenInfoEntity">
        INSERT INTO `mg_movie`.`screen_info`(`index`, `movie_index`, `auditorium_index`, `screen_date`, `mv_start_time`,
                                             `mv_end_time`)
        VALUES (#{index}, #{movieIndex}, #{auditoriumIndex}, #{screenDate}, #{mvStartTime}, #{mvEndTime})
    </insert>
    <select id="selectUserByContact" resultType="dev.babsang.megabox.entities.member.UserEntity">
        select email    as email,
               `name`   as `name`,
               birthday as birthday,
               contact  as contact,
               id       as id
        from mg_member.users
        where contact = #{contact}
    </select>

    <select id="selectBookingById" resultType="dev.babsang.megabox.vos.movie.BookingVo">
        select booking.`index`             as `index`,
               booking.screen_info_index   as screenInfoIndex,
               booking.user_id             as userId,
               booking.seat_index          as seatIndex,
               booking.payment             as payment,
               booking.booking_date        as bookingDate,
               screenInfo.`index`          as screenInfoIndex,
               screenInfo.movie_index      as movieIndex,
               screenInfo.screen_date      as screenDate,
               screenInfo.mv_start_time    as mvStartTime,
               screenInfo.auditorium_index as auditoriumIndex,
               seat.column_text            as columnText,
               seat.row                    as `row`,
               movie.title                 as title,
               movie.screen_type           as screenType,
               movie.movie_poster          as moviePoster,
               auditorium.text             as auditoriumText,
               auditorium.branch_index     as branchIndex,
               branch.text                 as branchText
        from mg_movie.booking as booking
                 left join mg_movie.screen_info as screenInfo on screenInfo.index = booking.screen_info_index
                 left join mg_movie.seats as seat on seat.index = booking.seat_index
                 left join mg_movie.movies as movie on movie.index = screenInfo.movie_index
                 left join mg_movie.auditoriums as auditorium on auditorium.`index` = screenInfo.auditorium_index
                 left join mg_movie.branches as branch on branch.`index` = auditorium.branch_index
        where user_id = #{userId}
    </select>

    <select id="selectMovieVosById" resultType="dev.babsang.megabox.entities.movie.BookingEntity">
        SELECT `index`           as `index`,
               screen_info_index as screenInfoIndex,
               user_id           as userId,
               seat_index        as seatIndex,
               sum(payment)      as payment
        from mg_movie.booking
        where user_id = #{id}
    </select>

    <select id="selectMovieByManagement" resultType="dev.babsang.megabox.entities.movie.MovieEntity">
        SELECT `index`        AS `index`,
               `title`        AS `title`,
               `release_date` AS `releaseDate`
        FROM `mg_movie`.`movies`
    </select>
    <select id="selectAuditoriumByRegionAndBranch" resultType="dev.babsang.megabox.vos.myPage.RegionVo">
        SELECT `region`.`index`     AS `index`,
               `region`.`text`      AS `regionText`,
               `branch`.`text`      AS `branchText`,
               `auditorium`.`index` AS `auditoriumIndex`,
               `auditorium`.`text`  AS `auditoriumText`
        FROM `mg_movie`.`region` AS `region`
                 LEFT JOIN `mg_movie`.`branches` AS `branch` ON `region`.`index` = `branch`.`region_index`
                 LEFT JOIN `mg_movie`.`auditoriums` AS `auditorium` ON `branch`.`index` = `auditorium`.`branch_index`
    </select>

    <select id="selectScreenInfoBySchedule"
            resultType="dev.babsang.megabox.vos.movie.MovieScreenInfoVo">
        SELECT `screenInfo`.`index` AS `index`,
        `screenInfo`.`movie_index` AS `movieIndex`,
        `screenInfo`.`auditorium_index` AS `auditoriumIndex`,
        `screenInfo`.`screen_date` AS `screenDate`,
        `screenInfo`.`mv_start_time` AS `mvStartTime`,
        `screenInfo`.`mv_end_time` AS `mvEndTime`,
        `movie`.`title` AS `infoMovieTitle`,
        `movie`.`screen_type` AS `infoMovieState`,
        `movie`.`age_limit` AS `infoMovieAgeLimit`,
        `movie`.`movie_poster` AS `infoMoviePoster`,
        CONCAT(`branch`.`text`, '/', `auditorium`.`text`) AS `branchAudText`
        FROM `mg_movie`.`screen_info` AS `screenInfo`
        LEFT JOIN `mg_movie`.`movies` AS `movie` ON `screenInfo`.`movie_index` = `movie`.`index`
        LEFT JOIN `mg_movie`.`auditoriums` AS `auditorium`
        ON `screenInfo`.`auditorium_index` = `auditorium`.`index`
        LEFT JOIN `mg_movie`.`branches` AS `branch` ON `auditorium`.`branch_index` = `branch`.`index`
        <if test="criterion != null and criterion.equals('title')">
            WHERE REPLACE(`movie`.`title`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
        </if>
        <if test="criterion != null and criterion.equals('all')">
            WHERE REPLACE(`movie`.`title`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
            OR REPLACE(CONCAT(`branch`.`text`, '/', `auditorium`.`text`), ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
        </if>
        <if test="criterion != null and criterion.equals('auditorium')">
            WHERE REPLACE(CONCAT(`branch`.`text`, '/', `auditorium`.`text`), ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
            OR REPLACE(`auditorium`.`text`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
        </if>
        ORDER BY `screenInfo`.`screen_date` DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="selectScreenInfo" resultType="dev.babsang.megabox.entities.movie.ScreenInfoEntity">
        SELECT `index`            AS `index`,
               `movie_index`      AS `movieIndex`,
               `auditorium_index` AS `auditoriumIndex`,
               `screen_date`      AS `screenDate`,
               `mv_start_time`    AS `mvStartTime`,
               `mv_end_time`      AS `mvEndTime`
        FROM `mg_movie`.`screen_info`
        WHERE `index` = #{index}
    </select>

    <select id="selectScreenInfoByCount"
            resultType="int">
        SELECT COUNT(0)
        FROM `mg_movie`.`screen_info`
        LEFT JOIN `mg_movie`.`movies` AS `movie` ON `screen_info`.`movie_index` = `movie`.`index`
        LEFT JOIN `mg_movie`.`auditoriums` AS `auditorium` ON `screen_info`.`auditorium_index` = `auditorium`.`index`
        LEFT JOIN `mg_movie`.`branches` AS `branch` ON `auditorium`.`branch_index` = `branch`.`index`
        <if test="criterion != null and criterion.equals('title')">
            WHERE REPLACE(`movie`.`title`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
        </if>
        <if test="criterion != null and criterion.equals('all')">
            WHERE REPLACE(`movie`.`title`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
            OR REPLACE(CONCAT(`branch`.`text`, '/', `auditorium`.`text`), ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
        </if>
        <if test="criterion != null and criterion.equals('auditorium')">
            WHERE REPLACE(CONCAT(`branch`.`text`, '/', `auditorium`.`text`), ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
            OR REPLACE(`auditorium`.`text`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
        </if>
    </select>

    <update id="updateUser" parameterType="dev.babsang.megabox.entities.member.UserEntity">
        update mg_member.users
        set email             = #{email},
            `name`            = #{name},
            birthday          = #{birthday},
            contact           = #{contact},
            id                = #{id},
            `password`        = #{password},
            address_postal    = #{addressPostal},
            address_primary   = #{addressPrimary},
            address_secondary = #{addressSecondary}
        where email = #{email}
        limit 1
    </update>

    <delete id="deleteUser">
        delete
        from mg_member.users
        where email = #{email}
        limit 1
    </delete>

    <delete id="deleteBooking">
        delete
        from mg_movie.booking
        where `screen_info_index` = #{screenInfoIndex}
          and `user_id` = #{userId}
    </delete>

    <delete id="deleteScreenInfo">
        DELETE
        FROM `mg_movie`.`screen_info`
        WHERE `index` = #{index}
    </delete>


    <select id="selectUserById"
            resultType="dev.babsang.megabox.entities.member.UserEntity">
        SELECT `email`             AS `email`,
               `name`              AS `name`,
               `birthday`          AS `birthday`,
               `contact`           AS `contact`,
               `id`                AS `id`,
               `password`          AS `password`,
               `address_postal`    AS `addressPostal`,
               `address_primary`   AS `addressPrimary`,
               `address_secondary` AS `addressSecondary`,
               `registered_on`     AS `registeredOn`,
               `admin_flag`        AS `adminFlag`
        FROM `mg_member`.`users`
        ORDER BY `registered_on` DESC
    </select>

    <select id="selectUserCount"
            resultType="int">
        SELECT COUNT(0)
        FROM `mg_member`.`users`
        <if test="criterion != null and criterion.equals('name')">
            WHERE REPLACE(`name`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
        </if>
        <if test="criterion != null and criterion.equals('all')">
            WHERE REPLACE(`name`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
            OR REPLACE(`id`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
        </if>
        <if test="criterion != null and criterion.equals('id')">
            WHERE REPLACE(`id`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
        </if>
    </select>

    <select id="selectMovieCount"
            resultType="int">
        select count(0)
        from mg_movie.movies
        <if test="criterion != null and criterion.equals('title')">
            WHERE REPLACE(`title`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
        </if>
        <if test="criterion != null and criterion.equals('all')">
            WHERE REPLACE(`title`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
            OR REPLACE(`title_en`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
        </if>
        <if test="criterion != null and criterion.equals('titleEn')">
            WHERE REPLACE(`title_en`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
        </if>
    </select>

    <select id="selectUserIdCount"
            resultType="dev.babsang.megabox.entities.member.UserEntity">
        SELECT
        `email` AS `email`,
        `name` AS `name`,
        `birthday` AS `birthday`,
        `contact` AS `contact`,
        `id` AS `id`,
        `password` AS `password`,
        `address_postal` AS `addressPostal`,
        `address_primary` AS `addressPrimary`,
        `address_secondary` AS `addressSecondary`,
        `registered_on` AS `registeredOn`,
        `admin_flag` AS `adminFlag`
        FROM `mg_member`.`users` AS `user`
        <if test="criterion != null and criterion.equals('name')">
            WHERE REPLACE(`user`.`name`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
        </if>
        <if test="criterion != null and criterion.equals('all')">
            WHERE REPLACE(`name`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
            OR REPLACE(`id`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
        </if>
        <if test="criterion != null and criterion.equals('id')">
            WHERE REPLACE(`id`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
        </if>
        ORDER BY `registered_on` DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="selectMoviePaging"
            resultType="dev.babsang.megabox.entities.movie.MovieEntity">
        select `index` as `index`,
        title as title,
        title_en as titleEn,
        release_date as releaseDate,
        end_date as endDate,
        summary as summary,
        age_limit as ageLimit,
        movie_state as movieState,
        genre as genre,
        director as director,
        actor as actor,
        running_time as runningTime,
        screen_type as screenType,
        movie_poster as moviePoster,
        background_image as backgroundImage
        from mg_movie.movies
        <if test="criterion != null and criterion.equals('title')">
            WHERE REPLACE(`movies`.`title`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
        </if>
        <if test="criterion != null and criterion.equals('all')">
            WHERE REPLACE(`title`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
            OR REPLACE(`title_en`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
        </if>
        <if test="criterion != null and criterion.equals('titleEn')">
            WHERE REPLACE(`title_en`, ' ', '') LIKE CONCAT('%', REPLACE(#{keyword}, ' ', ''), '%')
        </if>
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <delete id="adminDeleteUser">
        delete
        from mg_member.users
        where email = #{email}
    </delete>

    <select id="selectByEmail"
            resultType="dev.babsang.megabox.entities.member.UserEntity">
        SELECT `email`             AS `email`,
               `name`              AS `name`,
               `birthday`          AS `birthday`,
               `contact`           AS `contact`,
               `id`                AS `id`,
               `password`          AS `password`,
               `address_postal`    AS `addressPostal`,
               `address_primary`   AS `addressPrimary`,
               `address_secondary` AS `addressSecondary`,
               `registered_on`     AS `registeredOn`,
               `admin_flag`        AS `adminFlag`
        FROM `mg_member`.`users`
        WHERE BINARY `email` = #{email}
    </select>

    <update id="updateScreenInfo"
            parameterType="dev.babsang.megabox.entities.movie.ScreenInfoEntity">
        UPDATE `mg_movie`.`screen_info`
        SET `movie_index`      = #{movieIndex},
            `auditorium_index` = #{auditoriumIndex},
            `screen_date`      = #{screenDate},
            `mv_start_time`    = #{mvStartTime},
            `mv_end_time`      = #{mvEndTime}
        WHERE `index` = #{index}
    </update>

    <select id="selectMovies" parameterType="dev.babsang.megabox.entities.movie.MovieEntity"
            resultType="dev.babsang.megabox.entities.movie.MovieEntity">
        select `index`          as `index`,
               title            as title,
               title_en         as titleEn,
               release_date     as releaseDate,
               end_date         as endDate,
               summary          as summary,
               age_limit        as ageLimit,
               movie_state      as movieState,
               genre            as genre,
               director         as director,
               actor            as actor,
               running_time     as runningTime,
               screen_type      as screenType,
               movie_poster     as moviePoster,
               background_image as backgroundImage
        from mg_movie.movies
    </select>

    <select id="selectMovie" parameterType="dev.babsang.megabox.entities.movie.MovieEntity"
            resultType="dev.babsang.megabox.entities.movie.MovieEntity">
        select `index`          as `index`,
               title            as title,
               title_en         as titleEn,
               release_date     as releaseDate,
               end_date         as endDate,
               summary          as summary,
               age_limit        as ageLimit,
               movie_state      as movieState,
               genre            as genre,
               director         as director,
               actor            as actor,
               running_time     as runningTime,
               screen_type      as screenType,
               movie_poster     as moviePoster,
               background_image as backgroundImage
        from mg_movie.movies
        where `index` = #{index}
    </select>

    <insert id="insertMovie"
            useGeneratedKeys="true"
            keyProperty="index"
            keyColumn="index"
            parameterType="dev.babsang.megabox.entities.movie.MovieEntity">
        insert into mg_movie.movies(`index`, title, title_en, release_date, end_date, summary, age_limit, movie_state,
                                    genre, director, actor, running_time, screen_type, movie_poster, background_image)
        values (#{index}, #{title}, #{titleEn}, #{releaseDate}, #{endDate}, #{summary}, #{ageLimit}, #{movieState},
                #{genre}, #{director}, #{actor}, #{runningTime}, #{screenType}, #{moviePoster}, #{backgroundImage})
    </insert>

    <update id="updateMovie" parameterType="dev.babsang.megabox.entities.movie.MovieEntity">
        update mg_movie.movies
        set title            = #{title},
            title_en         = #{titleEn},
            release_date     = #{releaseDate},
            end_date         = #{endDate},
            summary          = #{summary},
            age_limit        = #{ageLimit},
            movie_state      = #{movieState},
            genre            = #{genre},
            director         = #{director},
            actor            = #{actor},
            running_time     = #{runningTime},
            screen_type      = #{screenType},
            movie_poster     = #{moviePoster},
            background_image = #{backgroundImage}
        where `index` = #{index}
    </update>

    <delete id="deleteMovie">
        delete
        from mg_movie.movies
        where `index` = #{index}
    </delete>

</mapper>
